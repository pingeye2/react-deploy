{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ProductCategoryRow","category","this","props","colSpan","React","Component","ProductRow","product","name","stocked","style","color","price","ProductTable","filterText","inStockOnly","rows","lastCategory","products","forEach","indexOf","push","SearchBar","handleFilterTextChange","bind","handleInStockChange","e","onFilterTextChange","target","value","onInStockChange","checked","type","placeholder","onChange","FilterableProductTable","state","setState","PRODUCTS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.057103af.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nclass ProductCategoryRow extends React.Component {\n  render() {\n    const category = this.props.category;\n    return (\n      <tr>\n        <th colSpan=\"2\">\n          {category}\n        </th>\n      </tr>\n    );\n  }\n}\n\nclass ProductRow extends React.Component {\n  render() {\n    const product = this.props.product;\n    const name = product.stocked ?\n      product.name :\n      <span style={{color: 'red'}}>\n        {product.name}\n      </span>;\n\n    return (\n      <tr>\n        <td>{name}</td>\n        <td>{product.price}</td>\n      </tr>\n    );\n  }\n}\n\nclass ProductTable extends React.Component {\n  render() {\n\n    const filterText = this.props.filterText;\n    const inStockOnly = this.props.inStockOnly;\n\n    const rows = [];\n    let lastCategory = null;\n    \n    this.props.products.forEach((product) => {\n\n      // if filterText does not appear in the product name then don't show it\n      if (product.name.indexOf(filterText) === -1) {\n        return;\n      }\n\n      // if they've selected in stock only and this product is not in stock then don't show it\n      \n      if (inStockOnly && !product.stocked) {\n        return;\n      }\n\n      if (product.category !== lastCategory) {\n        rows.push(\n          <ProductCategoryRow\n            category={product.category}\n            key={product.category} />\n        );\n      }\n      rows.push(\n        <ProductRow\n          product={product}\n          key={product.name} />\n      );\n      lastCategory = product.category;\n    });\n\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    );\n  }\n}\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockChange = this.handleInStockChange.bind(this);\n  }\n\n  handleFilterTextChange(e) {\n    this.props.onFilterTextChange(e.target.value);\n  }\n  \n  handleInStockChange(e) {\n    this.props.onInStockChange(e.target.checked);\n  }\n  render() {\n\n    const filterText = this.props.filterText;\n    const inStockOnly = this.props.inStockOnly;\n\n    return (\n      <form>\n        <input type=\"text\" placeholder=\"Search...\" value={filterText}\n        onChange={this.handleFilterTextChange}\n         />\n        \n        <p>\n          <input type=\"checkbox\" checked={inStockOnly}\n          onChange={this.handleInStockChange}\n          />\n          \n          \n          {' '}\n          Only show products in stock\n        </p>\n      </form>\n    );\n  }\n}\n\nclass FilterableProductTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterText: '',\n      inStockOnly: false\n    };\n\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockChange = this.handleInStockChange.bind(this);\n  }\n\n  handleFilterTextChange(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n  \n  handleInStockChange(inStockOnly) {\n    this.setState({\n      inStockOnly: inStockOnly\n    })\n  }\n  render() {\n    return (\n      <div>\n        <SearchBar \n         filterText={this.state.filterText}\n         inStockOnly={this.state.inStockOnly}\n         onFilterTextChange={this.handleFilterTextChange}\n          onInStockChange={this.handleInStockChange}\n         />\n        <ProductTable products={this.props.products}\n         filterText={this.state.filterText}\n         inStockOnly={this.state.inStockOnly} />\n\n      </div>\n    );\n  }\n}\n\n\nconst PRODUCTS = [\n  {category: 'Sporting Goods', price: '$49.01', stocked: true, name: 'Football'},\n  {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\n  {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\n  {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\n  {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\n  {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\n];\n\n\nfunction App() {\n  return (\n    <FilterableProductTable products={PRODUCTS} />\n    \n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}